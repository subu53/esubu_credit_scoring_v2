name: CodeRabbit Auto-Fix

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  coderabbit-autofix:
    runs-on: ubuntu-latest
    name: CodeRabbit Auto-Fix
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort autopep8 bandit safety
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run Black formatting
      run: |
        black --diff --check . || black .
        
    - name: Sort imports with isort
      run: |
        isort --diff --check-only . || isort .
        
    - name: Auto-fix PEP8 issues
      run: |
        autopep8 --in-place --recursive --aggressive --aggressive .
        
    - name: Check for changes
      id: check-changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit auto-fixes
      if: steps.check-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "coderabbit@users.noreply.github.com"
        git config --local user.name "CodeRabbit[bot]"
        git add .
        git commit -m "ðŸ¤– CodeRabbit: Auto-fix code formatting and style issues"
        
    - name: Push changes
      if: steps.check-changes.outputs.changes == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.head_ref }}

  security-autofix:
    runs-on: ubuntu-latest
    name: Security Auto-Fix
    needs: coderabbit-autofix
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety semgrep
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run security scan and auto-fix
      run: |
        # Run bandit for security issues
        bandit -r . -f json -o bandit-report.json || true
        
        # Check for vulnerable dependencies
        safety check --json --output safety-report.json || true
        
        # Create security report
        echo "## ðŸ”’ Security Scan Results" > security-report.md
        echo "CodeRabbit has scanned your code for security vulnerabilities." >> security-report.md
        
    - name: Comment security report
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('security-report.md')) {
            const report = fs.readFileSync('security-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
          }
